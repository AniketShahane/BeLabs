New things that we learned in this project 

#01. How to deal with images files as input 
--> Very Very Important Step is to make the enctype of the form equal to multipart/form-data

*** A little complicated method ***
--> The type of the input has to set to file and name must also be given to the input tag 
"""Eg. <input type="file" name="image">   """
--> Next we create a forms.py file and write the following code inside the file 
"""
    from django import forms 

    class ImageUpload(forms.Form):
        image = forms.ImageField()
"""
--> Import this forms.py file wherever you want to use it
"""
    from .forms import ImageUpload 

    form = ImageUpload(request.POST, request.FILES)
    
    image = form.cleaned_data['image']

    # Here we have got our image file we can then use this as the argument to a model, to create a new one 
"""

*** Easier Method ***
if request.FILES['name_input']:
    ....


#02. How to set a minimum/maximum length or minimum/maximum value to a field 
--> First import the required validators 
"""
    from django.contrib.validators import MinValueValidator, MaxValueValidator, MinLengthValidator, MaxLengthValidator
"""
--> Then use these validators directly into your model 
"""
    text = models.TextField(validators=[MinLengthValidator(30), MaxLengthValidator(100)])
    # So the text will have 30 letters atleast 
    # the value validators can be used in the case of integers 
"""

#03. How to get the checkbox response as the post request
--> Inside views.py write the following code 
"""
    checklist = request.POST.getlist('checkbox_name')
    # The checklist var will now store an array of ""values"" of the checked var
"""

#04. How to render the content of the blog as it is (ie with line breaks and all...)
--> use {{blog.body|linebreaks}}


#05. How to get a rich text editor using CKEditor available in django ??
--> Install django-ckeditor and add 'ckeditor' in the installed apps..
--> Then add the following code snippet in models.py 
'''
    from ckeditor.fields import RichTextField
    body = RichTextField(blank=True)
'''
--> After this we have to run 'python manage.py collectstatic' to collect all the static files that come with ckeditor like icons and stuff.... 
--> If we want to upload stuff like images onto our blogs we have to add 'ckeditor_uploader' to the installed apps... Then we also have to add ....
"""
    CKEDITOR_UPLOAD_PATH = 'uploads/'
    # This will automatically save the images to the 'media' directory under the uploads folder 
"""
-->Now we have to add the following code snippet to the models.py 
"""
    from ckeditor_uploader.fields import RichTextUploadingField(blank=True)
"""
--> To observe the changes we need to make migrations 
--> To get the editor in the frontend we will have to make a custom form 
* Create a forms.py field and add the following code 
"""
    from django.forms import ModelForm
    from .models import Blog 

    class PostForm(ModelForm):
        class Meta:
            model = Blog 
            # We define the model here 
            fields = ['body',]
            # Here we add the fields that we want to edit or add during posting... 
"""